# uncomment the next line and the last line to see shell start-up time
# zmodload zsh/zprof
#completion definitions for the brew command and also some brew packages, code is from https://docs.brew.sh/Shell-Completion
if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

  autoload -Uz compinit
  compinit
fi
#disable auto upgrading for homebrew
HOMEBREW_NO_AUTO_UPDATE=1

#set c++ compiler to gcc 14
# export CC=/opt/homebrew/bin/gcc-14
# export CC=/opt/homebrew/Cellar/llvm/19.1.4/bin/clang
# export CXX=/opt/homebrew/Cellar/llvm@18/18.1.8/bin/clang++

#my aliases
alias n='nvim'
alias ls='lsd'
alias crl='xh'
alias home="z /Users/ayaan"
alias up="z .."
alias iina="/Applications/IINA.app/Contents/MacOS/iina-cli"
alias l='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lt='ls --tree'
alias laf='la | fzf'
alias cat='bat'
alias wvim='NVIM_APPNAME="wvim" nvim'
# alias cd='z'
alias codi='code-insiders .'
alias gl='lazygit'
alias pip='pip3'
alias !='eval "$(fc -ln -1)" | fzf'
alias fn="open ."
alias please="sudo"
alias cdf="eval \"z \\\"\\\`osascript -e 'tell app \\\\\\\"Finder\\\\\\\" to return the POSIX path of (target of window 1 as alias)'\\\`\\\"\""
#cdf alias docs
#gets the path of the folder i am cd'd into in the finder app, in finder i have an apple script pinned to the toolbar, which opens a new tab in kitty and runs the cdf command, effectively cding me into the current finder directory in one click.
#there is def a smarter way of doing this but oh well
#cdf alias docs

agent() {
    pyenv activate agent || { echo "Failed to activate agent"; return 1; }
    pyenv shell agent
    pyenv local agent
    echo "agent environment is ready."
}




vv() {
  # Assumes all configs exist in directories named ~/.config/nvim.*
  local config=$(fd --max-depth 1 --glob 'nvim.*' ~/.config | fzf --prompt="Neovim Configs > " --height=~50% --layout=reverse --border --exit-0)
 
  # If I exit fzf without selecting a config, don't open Neovim
  [[ -z $config ]] && echo "No config selected" && return
 
  # Open Neovim with the selected config
  NVIM_APPNAME=$(basename $config) nvim $@
}
#got below code from:
#https://yazi-rs.github.io/docs/quick-start/
#when you hit q in yazi, it exits yazi and cd's into whatever directory you were in in yazi
function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd "$cwd"
		echo "$cwd"
	fi
	rm -f -- "$tmp"
}
#downloads gitignore file. example: gi python,java
function gi() {
	curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;
}
# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
#fzf custom color scheme, currently catppuccin mocha
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--layout="reverse"
--border="rounded" --border-label="" --preview-window="border-rounded"
"
# Preview file content using bat
export FZF_CTRL_T_OPTS="
  --height 90%
  --walker-skip .git,node_modules,target
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"

export FZF_ALT_C_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'lsd --tree {}'"


eval $(thefuck --alias heck)

eval "$(zoxide init zsh)"
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
#zsh autosuggestions case insensitve file completion stuff:
#
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
autoload -Uz compinit && compinit
#

#keybindings for jk to esc, zsh default vim mode emulation 
bindkey -M viins 'jk' vi-cmd-mode
#to enable vim mode emulatinon
bindkey -v
bindkey '^y' autosuggest-accept
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^I' fzf-completion

#fnm, needed to manage node versions. Below line gets the node version to set the env variable or smth
eval "$(fnm env --use-on-cd --shell zsh)"


rga-fzf() {
	RG_PREFIX="rga --files-with-matches"
	local file
	file="$(
		FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
			fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}" \
				--preview-window="70%:wrap"
	)" &&
	echo "opening $file" &&
	xdg-open "$file"
}
source /Users/ayaan/bin/fzf-git.sh

#pyenv
# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"

#increase the limit for the num of entries saved in history
HISTSIZE=99999999
SAVEHIST=$HISTSIZE

#atuin, for command history search and stuff
. "$HOME/.atuin/bin/env"
eval "$(atuin init zsh --disable-up-arrow)"

export VIRTUAL_ENV_DISABLE_PROMPT=1
#keybindings for zsh autosuggestions:
#keep in end for starship
eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/.config/starship/starship.toml


# pnpm
export PNPM_HOME="/Users/ayaan/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end




# >>> juliaup initialize >>>

# !! Contents within this block are managed by juliaup !!

path=('/Users/ayaan/.juliaup/bin' $path)
export PATH

# <<< juliaup initialize <<<
# zprof
